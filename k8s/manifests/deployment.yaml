apiVersion: apps/v1
kind: Deployment
metadata:
  name: iooding-blog
  namespace: iooding
spec:
  replicas: 2
  selector:
    matchLabels:
      app: iooding-blog
  template:
    metadata:
      labels:
        app: iooding-blog
    spec:
      initContainers:
        - name: migrate
          image: viktor2003/iooding:latest
          command: ["python", "manage.py", "migrate"]
          env:
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: aws-credentials
                  key: access_key_id
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: aws-credentials
                  key: secret_access_key
            - name: AWS_DEFAULT_REGION
              value: eu-central-1
        - name: create-admin
          image: viktor2003/iooding:latest
          command:
            - python
            - manage.py
            - createsuperuser
            - --noinput
            - --username
            - $(DJANGO_SUPERUSER_USERNAME)
            - --email
            - admin@iooding.local
          env:
            - name: DJANGO_SUPERUSER_USERNAME
              valueFrom:
                secretKeyRef:
                  name: iooding-admin-secret
                  key: username
            - name: DJANGO_SUPERUSER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: iooding-admin-secret
                  key: password
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: aws-credentials
                  key: access_key_id
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: aws-credentials
                  key: secret_access_key
            - name: AWS_DEFAULT_REGION
              value: eu-central-1
      containers:
        - name: iooding
          image: viktor2003/iooding:latest
          ports:
            - containerPort: 8000
          env:
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: aws-credentials
                  key: access_key_id
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: aws-credentials
                  key: secret_access_key
            - name: AWS_DEFAULT_REGION
              value: eu-central-1
          resources:
            requests:
              memory: "256Mi"
              cpu: "100m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          livenessProbe:
            httpGet:
              path: /
              port: 8000
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: 8000
            initialDelaySeconds: 10
            periodSeconds: 5
