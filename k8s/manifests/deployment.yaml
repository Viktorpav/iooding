apiVersion: apps/v1
kind: Deployment
metadata:
  name: iooding-blog
  namespace: iooding
spec:
  replicas: 2
  selector:
    matchLabels:
      app: iooding-blog
  template:
    metadata:
      labels:
        app: iooding-blog
    spec:
      initContainers:
        - name: migrate-and-create-admin
          image: viktor2003/iooding:latest
          command:
            - /bin/sh
            - -c
            - |
              set -e
              echo "Running migrations..."
              python manage.py migrate --noinput
              echo "Collecting static files..."
              python manage.py collectstatic --noinput
              echo "Ensuring superuser exists..."
              python manage.py shell <<'PYEOF'
              from django.contrib.auth import get_user_model
              import os
              User = get_user_model()
              username = os.environ["DJANGO_SUPERUSER_USERNAME"]
              password = os.environ["DJANGO_SUPERUSER_PASSWORD"]
              email = "admin@iooding.local"
              if not User.objects.filter(username=username).exists():
                  User.objects.create_superuser(username=username, email=email, password=password)
                  print(f"Created superuser {username}")
              else:
                  print(f"Superuser {username} already exists")
              PYEOF
          env:
            - name: DJANGO_SUPERUSER_USERNAME
              valueFrom:
                secretKeyRef:
                  name: iooding-admin-secret
                  key: username
            - name: DJANGO_SUPERUSER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: iooding-admin-secret
                  key: password
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: aws-credentials
                  key: access_key_id
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: aws-credentials
                  key: secret_access_key
            - name: AWS_DEFAULT_REGION
              value: eu-central-1
          volumeMounts:
            - name: static-files
              mountPath: /app/staticfiles
      containers:
        - name: iooding
          image: viktor2003/iooding:latest
          ports:
            - containerPort: 8000
          env:
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: aws-credentials
                  key: access_key_id
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: aws-credentials
                  key: secret_access_key
            - name: AWS_DEFAULT_REGION
              value: eu-central-1
          volumeMounts:
            - name: static-files
              mountPath: /app/staticfiles
      volumes:
        - name: static-files
          emptyDir: {}
